#!/bin/bash

REMOTE=$1
shift 1

function rclone_dirs() {
    echo rclone sync "$@"
    rclone sync -v                              \
        --retries 2                             \
        --fast-list                             \
        --transfers 4                           \
        --delete-during                         \
        --delete-excluded                       \
        --exclude '.DocumentRevisions-V100/**'  \
        --exclude '.Spotlight-V100/**'          \
        --exclude '.TemporaryItems/**'          \
        --exclude '.Trash/**'                   \
        --exclude '.Trashes/**'                 \
        --exclude '.Trashes'                    \
        --exclude '.apdisk'                     \
        --exclude '.fseventsd/**'               \
        --exclude '.zfs/**'                     \
        "$@"
}

function rclone_it() {
    test -d "$REMOTE/$1" && rclone_dirs "$REMOTE/$1" crypt-${1}:
}

function b2_sync_dirs() {
    echo backblaze-b2 sync "$@"
    backblaze-b2 sync --keepDays 722 --replaceNewer     \
        --excludeRegex '.*\.DocumentRevisions-V100.*'   \
        --excludeRegex '.*\.Spotlight-V100.*'           \
        --excludeRegex '.*\.TemporaryItems.*'           \
        --excludeRegex '.*\.Trash.*'                    \
        --excludeRegex '.*\.apdisk'                     \
        --excludeRegex '.*\.fseventsd.*'                \
        --excludeRegex '.*\.zfs.*'                      \
        "$@"
}

function b2_sync_it() {
    test -d "$REMOTE/$1" && b2_sync_dirs "$REMOTE/$1" b2://jwiegley-$1
}

case ${1:-all} in
  Documents) rclone_it Documents ;;
  Desktop)   rclone_it Desktop ;;

  Nasim)     test -d "$REMOTE/Nasim" && rclone_dirs "$REMOTE/Nasim" crypt-Nasim: ;;
  Misc)      test -d "$REMOTE/Backups/Misc" && rclone_dirs "$REMOTE/Backups/Misc" crypt-Backups-Misc: ;;
  Servers)   test -d "$REMOTE/Backups/Servers" && rclone_dirs "$REMOTE/Backups/Servers" crypt-Backups-Servers: ;;

  Home)
    test -d "$REMOTE/Home" && \
    rclone_dirs \
        --exclude '.config/recoll/xapiandb/**' \
        "$REMOTE/Home"      "crypt-Backups-System-Home:" ;;
  Library)
    test -d "$REMOTE/Library" && \
    rclone_dirs --exclude 'Application Support/Path Finder/**' \
        --exclude 'Application Support/DEVONthink Pro 2/**' \
        --exclude 'Application Support/Dash/**' \
        "$REMOTE/Library"   "crypt-Backups-System-Library:" ;;

  Messages)
    test -d "$REMOTE/Messages" && \
    rclone_dirs --exclude 'dovecot.index*' \
        "$REMOTE/Messages" "crypt-Messages:" ;;

  Databases) b2_sync_it Databases ;;
  Photos)    b2_sync_it Photos ;;
  Pictures)  b2_sync_it Pictures ;;
  Audio)     b2_sync_it Audio ;;
  Games)     b2_sync_it Games ;;

  src)
    test -d "$REMOTE/src" && \
    b2_sync_dirs \
        --excludeRegex 'nix/nixpkgs/.*' \
        --excludeRegex '.*/dist/.*' \
        --excludeRegex '.*/\.direnv/.*' \
        --excludeRegex '.*\.vo' \
        --excludeRegex '.*\.v.d' \
        --excludeRegex '.*\.aux' \
        --excludeRegex '.*\.glob' \
        "$REMOTE/src" b2://jwiegley-src ;;

  Media)
    test -d "$REMOTE/Media" && \
    b2_sync_dirs \
        --excludeRegex 'Linux/(CentOS|Ubuntu)/Media/.*' \
        "$REMOTE/Media" b2://jwiegley-Media ;;

  Movies)
    test -d "$REMOTE/Movies" && \
    b2_sync_dirs \
        --excludeRegex '.*(DSSS17|OPLSS|Introductory).*' \
        "$REMOTE/Movies" b2://jwiegley-Movies ;;

  slim)
    for i in      \
        Documents \
        Messages  \
        Desktop   \
        Home      \
        Library   \
        src       \
        Databases \
        Photos    \
        Pictures  \
        Audio     \
        Games     \
        Media     \
        Misc      \
        Servers   \
        Movies
    do
        b2-sync $REMOTE $i
    done
    ;;

  tank)
    for i in      \
        Nasim
    do
        b2-sync $REMOTE $i
    done
    ;;
esac
