#!/usr/bin/env python
#
# du1, version 1.0, by John Wiegley <johnw@newartisans.com>

import os
import sys
import md5
import string
import filecmp

from os.path import *
from stat import *

def count_singletons(path, size):
    new_size = size
    for root, dirs, files in os.walk(path):
        for f in files:
            info = os.lstat(join(root, f))
            if info[ST_NLINK] < 2:
                new_size += info[ST_SIZE]
    return new_size

def bytestring(amount):
    if amount < 1024:
        return "%db" % amount
    elif amount < 1024 * 1024:
        return "%dK" % (amount / 1024)
    elif amount < 1024 * 1024 * 1024:
        return "%.1fM" % (amount / (1024.0 * 1024.0))
    elif amount < 1024 * 1024 * 1024 * 1024:
        return "%.2fG" % (amount / (1024.0 * 1024.0 * 1024.0))

if len(sys.argv) > 1:
    paths = sys.argv[1:]
else:
    paths = ["."]

for path in paths:
    print "%8s %s" % (bytestring(count_singletons(path, 0)), path)
