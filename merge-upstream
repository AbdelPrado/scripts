#!/bin/bash

BRANCHES=/Volumes/RAID/Mirrors/llvm
PRODUCTS=$HOME/Products/llvm
LOG=$HOME/Desktop/merge.log

log()
{
    echo "$@" >> $LOG 2>&1
}

quiet() {
    if ! "$@" > /tmp/output.$$ 2>&1; then
        echo "Command failed: $@" >> $LOG
        cat /tmp/output.$$ >> $LOG
    fi
    rm -f /tmp/output.$$
}

update() {
    quiet git remote update

    if [[ "$1" == "--pull" ]]; then
        quiet git pull
    elif [[ "$1" == "--reset" ]]; then
        quiet git checkout -f $2
        quiet git reset --hard origin/$2
    fi
}

merge() {
    quiet git checkout -f $1
    quiet git reset --hard HEAD
    quiet git merge $2
}

run() {
    cd $SOURCE;     "$@"
    cd tools/clang; "$@"
}

rm -f $LOG

if [[ "$1" != --merge-only ]]; then
    for branch in $PRODUCTS/*; do
        if [[ ! -d $branch ]]; then continue; fi

        BASE=$(basename $branch)
        SOURCE=$BRANCHES/$BASE

        if [[ ! -d $SOURCE ]]; then continue; fi
        if [[ $BASE == main ]]; then continue; fi
        if [[ $BASE == test ]]; then continue; fi
        if [[ $BASE == merge ]]; then continue; fi

        log ========================================================================
        log Building $branch on $(date)
        log ========================================================================

        if [[ $BASE == 'svn' ]]; then
            run quiet svn update >> $LOG 2>&1
        elif [[ $BASE == 'git-svn' ]]; then
            run quiet git svn fetch >> $LOG 2>&1
            run quiet git svn rebase >> $LOG 2>&1
        elif [[ $BASE != 'topics' && $BASE != 'union' ]]; then
            run quiet update --pull >> $LOG 2>&1
        else
            run quiet update >> $LOG 2>&1
        fi

        if [[ $BASE == 'topics' ]]; then
            REFS=$SOURCE/tools/clang/.git/refs/heads

            for topic in $(cd $REFS/t; find . -type f | sed 's/\.\///') ; do
                log ========================================================================
                log Building topic $topic on $(date)
                log ========================================================================

                quiet git checkout -f t/$topic >> $LOG 2>&1
                (cd $branch && quiet-clang-build --tests -j16 >> $LOG 2>&1)
            done
        else
            (cd $branch && quiet-clang-build --tests -j16 >> $LOG 2>&1)
        fi
    done
fi

log ========================================================================
log Merging Clang/LLVM on $(date)
log ========================================================================

SOURCE=$BRANCHES/merge
PRODUCTS=$PRODUCTS/merge

set -o errexit

run quiet update --reset work >> $LOG 2>&1

if [[ ! -d $PRODUCTS ]]; then
  mkdir -p $PRODUCTS
  cd $PRODUCTS
  $SOURCE/configure >> $LOG 2>&1
fi

#run merge work origin/upstream >> $LOG 2>&1

cd $PRODUCTS
quiet-clang-build

# If it builds, push the commits to work now; it may not be passing tests
#run git push >> $LOG 2>&1

cd $PRODUCTS/tools/clang/test
make >> $LOG 2>&1

# If it passes tests, merge it to master
run merge master work >> $LOG 2>&1
run git push >> $LOG 2>&1

if egrep -q '(master -> master|Everything up-to-date)' $LOG; then
    mv $LOG $PRODUCTS
    exit 0
else
    exit 1
fi

