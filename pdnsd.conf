global {
    perm_cache   = 8192;
    cache_dir    = "/Users/johnw/Library/Caches/pdnsd";
    run_as       = "johnw";
    server_ip    = 127.0.0.1;
    status_ctl   = on;
    query_method = udp_tcp;
    min_ttl      = 1w;    # Retain cached entries at least 1 week.
    max_ttl      = 4w;    # Four weeks.
    timeout      = 10;    # Global timeout option (10 seconds).
    udpbufsize   = 1024;  # Upper limit on the size of UDP messages.
}

# server {
#     label      = "dhcp";
#     file       = "/etc/resolv.conf.isp";
#     timeout    = 30;
#     edns_query = yes;
# }

# server {
#     label      = "ti";
#     ip         = 128.247.5.10, 157.170.1.5;
#     preset     = off;
#     timeout    = 10;
#     uptest     = if;
#     interface  = tun0;
#     interval   = onquery;
#     edns_query = yes;
#     policy     = excluded;
#     include    = ".ti.com";
# }

server {
    label      = "home";
    ip         = 192.168.9.1;
    preset     = on;
    timeout    = 5;
    uptest     = ping;
    edns_query = yes;
}

server {
    label      = "google";
    ip         = 8.8.8.8, 8.8.4.4;
    preset     = on;
    timeout    = 5;
    uptest     = ping;
    edns_query = yes;
    exclude    = ".local";
}

server {
    label      = "dyndns";
    ip         = 216.146.35.35, 216.146.36.36;
    timeout    = 5;
    uptest     = ping;
    edns_query = yes;
    exclude    = ".local";
}

# The servers provided by OpenDNS are fast, but they do not reply with
# NXDOMAIN for non-existant domains, instead they supply you with an address
# of one of their search engines. They also lie about the addresses of of the
# search engines of google, microsoft and yahoo.  If you do not like this
# behaviour the "reject" option may be useful.
server {
    label      = "opendns";
    ip         = 208.67.222.222, 208.67.220.220;
    timeout    = 5;
    uptest     = query;
    # You may need to add additional address ranges here if the addresses
    # of their search engines change.
    reject     = 208.69.32.0/24,
                 208.69.34.0/24,
                 208.67.219.0/24;
    edns_query = yes;
    exclude    = ".local";
}

# This section is meant for resolving from root servers.
server {
    label             = "root-servers";
    root_server       = discover;
    ip                = 198.41.0.4, 192.228.79.201;
    randomize_servers = on;
}

source {
    owner         = localhost;
    serve_aliases = on;
    file          = "/etc/hosts";
}

rr {
    name    = localhost;
    reverse = on;
    a       = 127.0.0.1;
    owner   = localhost;
    soa     = localhost,root.localhost,42,86400,900,86400,86400;
}

# /* Texas Instruments */

# rr {
#     name = mercury.ext.ti.com;
#     a    = 192.91.75.10;
#     a    = 192.91.75.11;
#     a    = 198.47.25.17;
# }

rr { name = newartisans.com;
     a    = 208.82.103.192;
     #a    = 192.168.128.133;
   }
rr { name  = *.newartisans.com;
     cname = newartisans.com;
   }
rr { name = bugs.ledger-cli.org;
     cname = newartisans.com;
   }
rr { name = johnwiegley.com;
     cname = newartisans.com;
   }
rr { name = *.johnwiegley.com;
     cname = newartisans.com;
   }

/*
neg {
    name  = doubleclick.net;
    types = domain;           # This will also block xxx.doubleclick.net, etc.
}

neg {
    name  = bad.server.com;   # Badly behaved server you don't want to connect to.
    types = A,AAAA;
}
*/
