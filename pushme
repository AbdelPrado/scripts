#!/bin/bash

# There are several "zones" which this script synchronizes:
#
#  - ~/
#  - ~/Contracts
#  - ~/Downloads       (only from laptop -> desktop)
#  - /Applications     (only from desktop -> laptop)
#  - /opt	       (only from desktop -> laptop)
#  - /usr/local	       (only from desktop -> laptop)
#  - ~/Archives
#  - Media
#
# The home directory synchronization is made more complex by the fact that
# each machine has two areas where files live:
#
#  laptop  :: ~, /Volumes/Private
#  desktop :: ~, /Volumes/RAID
#
# This makes for four separate synchronization passes, for each combination.

minimum=false
if [[ "$1" == min || "$1" == minimum ]]; then
    minimum=true
    shift 1
fi

if [[ "$1" == titan ]]; then
    shift 1
    REMOTE=titan

    RSYNC='sudo /usr/bin/rsync'
    FLAGS="$1 -arPHyh --ignore-errors --force-delete"
else
    RSYNC='sudo /opt/local/bin/rsync'
    FLAGS="$1 -arPXHEyh --ignore-errors --force-delete"
fi

LOCAL=$(ipaddr bond0 2> /dev/null)
if [[ -z "$LOCAL" ]]; then
    LOCAL=$(ipaddr en0 2> /dev/null)
fi
if [[ -z "$LOCAL" ]]; then
    LOCAL=$(ipaddr en1 2> /dev/null)
fi

laptop=false
if [[ -z "$REMOTE" ]]; then
    if [[ "$LOCAL" == 192.168.9.141 ]]; then
	JOBS=-j18
	echo 'Looking for Hermes (wired)...'
	if ping -c1 -W50 -q 192.168.9.131 > /dev/null 2>&1; then
	    echo 'Found Hermes (wired)'
	    REMOTE=hermes
	    laptop=true
	elif ping -c1 -W50 -q 192.168.9.123 > /dev/null 2>&1; then
	    echo 'Found Hermes (wireless)'
	    REMOTE=hermesw
	    laptop=true
	    FLAGS="$FLAGS -z"
	else
	    echo 'Could not find Hermes!'
	    exit 1
	fi
    else
	JOBS=-j22
	echo 'Looking for Vulcan (home)...'
	if ping -c1 -W50 -q 192.168.9.141 > /dev/null 2>&1; then
	    echo 'Found Vulcan (home)'
	    REMOTE=vulcan
        elif [[ "$LOCAL" != 192.168.9.131 && "$LOCAL" != 192.168.9.123 ]] && \
             ping -c1 -W50 -q johnw.homeunix.net > /dev/null 2>&1 && \
             ssh -o ConnectTimeout=1s johnw.homeunix.net true > /dev/null 2>&1; then
	    echo 'Found Vulcan (johnw.homeunix.net)'
	    REMOTE=home
	    FLAGS="$FLAGS -z"
        elif [[ "$LOCAL" != 192.168.9.131 && "$LOCAL" != 192.168.9.123 ]] && \
             ssh -o ConnectTimeout=1s -p 2020 localhost true > /dev/null 2>&1; then
	    echo 'Found Hermes (forwarded)'
	    REMOTE=hermesf
	    laptop=true
	    FLAGS="$FLAGS -z"
	else
	    echo 'Could not find Vulcan!'
	    exit 1
	fi
    fi
fi

CONTROL="-o ControlPath=$HOME/.ssh/master-%r@%h:%p"
#CONTROL=""

ssh $CONTROL -MNf $REMOTE
ssh $CONTROL -O check $REMOTE || exit 1

export RSYNC_SSH="ssh $CONTROL"

MODE=$(basename "$0")

if [[ $MODE == 'pushme' ]]; then
    SOURCE=''
    TARGET="$REMOTE:"
else
    SOURCE="$REMOTE:"
    TARGET=''
fi

if [[ ( $MODE == 'pushme'  && $laptop == true ) || \
      ( $MODE == 'pullyou' && $laptop == false ) ]]; then
    SHOME=$SOURCE$HOME
    THOME=$TARGET$HOME
    CSOURCE="$SOURCE$HOME/Contracts"
    CTARGET="$TARGET/Volumes"
    PSOURCE="$SOURCE$HOME"
    PTARGET="$TARGET/Volumes/Private"
    RSOURCE="$SOURCE/Volumes/RAID"
    RTARGET="$TARGET$HOME"
    RRSOURCE="$SOURCE/Volumes/RAID"
    RRTARGET="$TARGET/Volumes/Data"
    RPSOURCE="$SOURCE/Volumes/RAID"
    RPTARGET="$TARGET/Volumes/Private"
    TSOURCE="$SOURCE/Volumes/RAID"
    TTARGET="$TARGET/Volumes/Passport"

elif [[ $MODE == 'pushme'  && $REMOTE == 'titan' ]]; then
    SHOME=$SOURCE$HOME
    THOME="$TARGET/export/home/johnw"
    CSOURCE="$SOURCE/Volumes"
    CTARGET="$TARGET/data/Contracts"
    PSOURCE="$SOURCE/Volumes/Private"
    PTARGET="$TARGET/export/home/johnw"
    RSOURCE="$SOURCE$HOME"
    RTARGET="$TARGET/data"
    RRSOURCE="$SOURCE/Volumes/Data"
    RRTARGET="$TARGET/data"
    RPSOURCE="$SOURCE/Volumes/Private"
    RPTARGET="$TARGET/data"
    TSOURCE="$SOURCE/Volumes/Passport"
    TTARGET="$TARGET/data"
else
    SHOME=$SOURCE$HOME
    THOME=$TARGET$HOME
    CSOURCE="$SOURCE/Volumes"
    CTARGET="$TARGET$HOME/Contracts"
    PSOURCE="$SOURCE/Volumes/Private"
    PTARGET="$TARGET$HOME"
    RSOURCE="$SOURCE$HOME"
    RTARGET="$TARGET/Volumes/RAID"
    RRSOURCE="$SOURCE/Volumes/Data"
    RRTARGET="$TARGET/Volumes/RAID"
    RPSOURCE="$SOURCE/Volumes/Private"
    RPTARGET="$TARGET/Volumes/RAID"
    TSOURCE="$SOURCE/Volumes/Passport"
    TTARGET="$TARGET/Volumes/RAID"
fi

if ! ssh $REMOTE true; then
    echo "Error: Could not reach host $REMOTE"
    exit 1
fi

# Home: ~ <-> ~
echo $SHOME/ '->' $THOME/
volcopy $FLAGS --delete --rsync-path="$RSYNC" \
    --include='/.MacOSX/' \
    --include='/.PySolFC/' \
    --include='/.bazaar/' \
    --include='/.darcs/' \
    --include='/.deltawalker/' \
    --include='/.dlt_li3' \
    --include='/.eboard/' \
    --include='/.gdbrc' \
    --include='/.git*' \
    --include='/.groovy/' \
    --include='/.inputrc' \
    --include='/.ledgerrc' \
    --include='/.scapy_startup.py' \
    --include='/.screenrc' \
    --include='/.stella/' \
    --include='/.ssh/' \
    --exclude='/.ssh/master*' \
    --include='/.zshrc' \
    --include='/Desktop/' \
    --include='/Library/' \
    --include='/Music/' \
    --exclude='/Music/iTunes/iTunes Media' \
    --exclude='/*/' \
    --exclude='/*' \
    --exclude='/.*/' \
    --exclude='/.*' \
    --include='/Library/Application Support/' \
    --include='/Library/Audio/' \
    --include='/Library/Emacs/' \
    --include='/Library/FontCollections/' \
    --include='/Library/Fonts/' \
    --include='/Library/Info/' \
    --include='/Library/Inform/' \
    --include='/Library/Java/' \
    --include='/Library/KeyBindings/' \
    --include='/Library/Keyboard Layouts/' \
    --include='/Library/Lisp/' \
    --include='/Library/PreferencePanes/' \
    --include='/Library/Preferences/' \
    --include='/Library/QuicKeys/' \
    --include='/Library/QuickLook/' \
    --include='/Library/Scripts/' \
    --include='/Library/Sounds/' \
    --include='/Library/Spelling/' \
    --include='/Library/TexPackages/' \
    --include='/Library/Wallpapers/' \
    --include='/Library/Widgets/' \
    --include='/Library/Workflows/' \
    --include='/Library/XMind/' \
    --include='/Library/texmf/' \
    --exclude='/Library/*/' \
    --exclude='/Library/*' \
    --exclude='/Library/.*/' \
    --exclude='/Library/.*' \
    --include='/Library/Application Support/DEVONagent/' \
    --include='/Library/Application Support/Google Earth/' \
    --include='/Library/Application Support/Hazel/' \
    --exclude='/Library/Application Support/Hazel/*.hazeldb' \
    --include='/Library/Application Support/LaunchBar/' \
    --exclude='/Library/Application Support/LaunchBar/Habits.plist' \
    --include='/Library/Application Support/Merlin/' \
    --include='/Library/Application Support/OmniGraffle/' \
    --include='/Library/Application Support/TextExpander/' \
    --exclude='/Library/Application Support/*/' \
    --exclude='/Library/Application Support/*' \
    --exclude='/Library/Application Support/.*/' \
    --exclude='/Library/Application Support/.*' \
    --include='/Library/Preferences/Adobe*/' \
    --include='/Library/Preferences/Adobe*' \
    --include='/Library/Preferences/com.apple.mail.plist' \
    --include='/Library/Preferences/com.expandrive.ExpanDrive2.plist' \
    --include='/Library/Preferences/com.googlecode.iterm2.plist' \
    --include='/Library/Preferences/com.mozilla.thunderbird.plist' \
    --include='/Library/Preferences/com.smileonmymac.textexpander.plist' \
    --include='/Library/Preferences/com.tastyapps.WebSnapper.plist' \
    --exclude='/Library/Preferences/*/' \
    --exclude='/Library/Preferences/*' \
    --exclude='/Library/Preferences/.*/' \
    --exclude='/Library/Preferences/.*' \
    $SHOME/ $THOME/ &

if [[ $minimum == false ]]; then
    # Home: Private and RAID
    #	 --include='/Backups/'
    #echo $RPSOURCE/ '->' $RPTARGET/
    #volcopy $FLAGS --delete --rsync-path="$RSYNC" \
    #    --include='/Documents/' \
    #    --exclude='/*/' \
    #    --exclude='/*' \
    #    --exclude='/.*/' \
    #    --exclude='/.*' \
    #    $RPSOURCE/ $RPTARGET/ &

    # Home: ~ <-> Private
    echo $PSOURCE/ '->' $PTARGET/
    volcopy $FLAGS --delete --rsync-path="$RSYNC" \
	--include='/.Deskzilla/' \
	--include='/.RData/' \
	--include='/.RHistory/' \
	--include='/.adobe/' \
	--include='/.authinfo' \
	--include='/.cvspass' \
	--include='/.cvsps/' \
	--include='/.datastudio/' \
	--include='/.dbvis/' \
	--include='/.dvdcss/' \
	--include='/.emacs.bmk' \
	--include='/.emacs.d/' \
	--include='/.eshell/' \
	--include='/.filezilla/' \
	--include='/.gdb_history' \
	--include='/.gnupg/' \
	--include='/.lftp/' \
	--include='/.msmtprc' \
	--include='/.netrc' \
	--include='/.pwclientrc' \
	--include='/.subversion/' \
	--include='/.w3m/' \
	--include='/Library/' \
	--include='/Documents/' \
	--exclude='/*/' \
	--exclude='/*' \
	--exclude='/.*/' \
	--exclude='/.*' \
	--include='/Library/Application Support/' \
	--include='/Library/Safari/' \
	--include='/Library/Thunderbird/' \
	--include='/Library/Mail/' \
	--include='/Library/Mail Downloads/' \
	--exclude='/Library/*/' \
	--exclude='/Library/*' \
	--exclude='/Library/.*/' \
	--exclude='/Library/.*' \
	--include='/Library/Application Support/1Password/' \
	--include='/Library/Application Support/AddressBook/' \
	--include='/Library/Application Support/Adium 2.0/' \
	--include='/Library/Application Support/Colloquy/' \
	--include='/Library/Application Support/Cyberduck/' \
	--include='/Library/Application Support/DEVONthink Pro 2/' \
	--include='/Library/Application Support/DVD Player/' \
	--include='/Library/Application Support/Firefox/' \
	--include='/Library/Application Support/Mozilla/' \
	--include='/Library/Application Support/PhoneView/' \
	--include='/Library/Application Support/Skype/' \
	--include='/Library/Application Support/Tunnelblick/' \
	--include='/Library/Application Support/ecto3/' \
	--exclude='/Library/Application Support/*/' \
	--exclude='/Library/Application Support/*' \
	--exclude='/Library/Application Support/.*/' \
	--exclude='/Library/Application Support/.*' \
	$PSOURCE/ $PTARGET/ &

    # Home: ~ and RAID (Projects is the only thing)
    echo $RSOURCE/ '->' $RTARGET/
    volcopy $FLAGS --delete --rsync-path="$RSYNC" \
	--include='/Projects/' \
	--exclude='/*/' \
	--exclude='/*' \
	--exclude='/.*/' \
	--exclude='/.*' \
	$RSOURCE/ $RTARGET/ &

    # Home: Data and RAID (Archives is the only thing)
    echo $RRSOURCE/ '->' $RRTARGET/
    volcopy $FLAGS --delete --rsync-path="$RSYNC" \
	--include='/Archives/' \
	--exclude='/Archives/.files.dat' \
	--exclude='/Archives/Games' \
	--exclude='/Archives/Games/' \
	--exclude='/Archives/Systems' \
	--exclude='/Archives/Systems/' \
	--include='/Music/' \
	--include='/Packages/' \
	--exclude='/*/' \
	--exclude='/*' \
	--exclude='/.*/' \
	--exclude='/.*' \
	$RRSOURCE/ $RRTARGET/ &

    # Contracts
    for contract in BoostPro EDG Embarcadero TI
    do
	if ([[ $laptop == true ]] && \
	    ssh $REMOTE "mount | grep -q '/Volumes/$contract.*hfs'") || \
	    ([[ $laptop == false ]] && \
	    mount | grep -q "/Volumes/$contract.*hfs")
	then
	    echo $CSOURCE/$contract/ '->' $CTARGET/$contract/
	    volcopy $FLAGS --delete --rsync-path="$RSYNC" \
		--exclude='Backup/' \
		--exclude='Backup.[0-9]/' \
		--exclude=target/ \
		--exclude=/Machines/ \
		$CSOURCE/$contract/ $CTARGET/$contract/ &
	fi
    done
fi

# opt
if [[ ! ($MODE == 'pushme' && $REMOTE == 'titan') ]]; then
    echo $SOURCE/opt/ '->' $TARGET/opt/
    volcopy $FLAGS --delete --rsync-path="$RSYNC" \
	--exclude=macports.conf \
	--exclude=/local/var/macports/packages/ \
	--exclude=/local/var/cache/pdnsd/ \
	--exclude=/local/var/db/mysql5/ \
	$SOURCE/opt/ $TARGET/opt/ &

    # stow
    echo $SOURCE/usr/local/ '->' $TARGET/usr/local/
    volcopy $FLAGS --delete --rsync-path="$RSYNC" \
	$SOURCE/usr/local/ $TARGET/usr/local/ &

    # Applications
    echo $SOURCE/Applications/ '->' $TARGET/Applications/
    volcopy $FLAGS --delete --rsync-path="$RSYNC" \
	--include='/MacPorts/' \
	--include='/Misc/' \
	--exclude='/Misc/Dropbox.app/' \
	--exclude='/Misc/Tunnelblick.app/' \
	--exclude='/Misc/ForeverSave 2.app/' \
	--exclude='/Misc/LaunchBar.app/' \
	--exclude=/*/ \
	$SOURCE/Applications/ $TARGET/Applications/ &

    if [[ ($MODE == 'pullyou' && $laptop == true) || \
	  ($MODE == 'pushme'  && $laptop == false) ]]; then
	# Downloads
	echo $SOURCE$HOME/Downloads/ '->' $TARGET$HOME/Downloads/
	volcopy $FLAGS --rsync-path="$RSYNC" \
	    $SOURCE$HOME/Downloads/ $TARGET$HOME/Downloads/ &
    fi
fi

#if [[ $minimum == false ]]; then
#    if ([[ $laptop == true ]] && ssh $REMOTE test -d /Volumes/Passport) || \
#	 ([[ $laptop == false ]] && test -d /Volumes/Passport)
#    then
#    # Archives, the larger part
#	 echo $TSOURCE/Archives/ '->' $TTARGET/Archives/
#	 volcopy $FLAGS --delete --rsync-path="$RSYNC" \
#	    --include=/Systems/ \
#	    --exclude=/Systems/Linux/Fedora/ \
#	    --exclude=/Systems/Linux/Debian/ \
#	    --exclude=/*/ \
#	    $TSOURCE/Archives/ $TTARGET/Archives/
#
#    fi
#fi

wait

ssh $CONTROL -O exit $REMOTE

exit 0

### pushme ends here
