#!/bin/bash

OPTS="--ssh=ssh-ride"

export RSYNC_SSH=ssh-ride

serial=false
while getopts 'dnsS' opt; do
    case $opt in
        n)  OPTS="$OPTS -n" ;;
        Q)  OPTS="$OPTS -c quick" ;;
        S)  serial=true ;;
        \?) OPTS="$OPTS -$OPTARG" ;;
    esac
done
shift $(($OPTIND - 1))

if [[ $serial == false ]]; then
    OPTS="$OPTS -j4"
fi

# Find out which remote machine to copy to
if [[ -z "$1" ]]; then
    find-env > /tmp/env
    source /tmp/env
    rm -f /tmp/env

    if [[ $found = false ]]; then
        echo "Could not find remote!"
        exit 1
    elif ! ssh $REMOTE true; then
        echo "Error: Could not reach host $REMOTE"
        exit 1
    fi

    echo "Remote is named $REMOTE"
else
    REMOTE=""
fi

# # Scan for items which should be synchronized
if ! running postfix/master; then
    echo "Giving queued messages a chance to escape..."

    if sudo /usr/libexec/postfix/master -t; then
        sudo /usr/libexec/postfix/master -e 60 &
    fi
    sudo /usr/sbin/postqueue -f
fi

# Stop running applications
#ssh $REMOTE osascript -e "tell application \"LaunchBar\" to quit"

find ~/Messages/Gnus -name 'nnir:*' -exec /bin/rm -fr '{}' \;

sudo port unload postgresql92-server 2> /dev/null
sudo port unload mysql55-server      2> /dev/null

# Synchronize directories
if [[ -n "$REMOTE" && $REMOTE == vulcan ]]; then
    OTHER=$REMOTE

elif [[ -n "$REMOTE" && ($REMOTE == hermes || $REMOTE == hermesw) ]]; then
    rsync -av \
        hermes:'Applications/World\ of\ Warcraft/WTF/Account/78475252\#2/' \
        ~/Applications/World\ of\ Warcraft/WTF/Account/78475252\#2/

    OTHER=$REMOTE
    REMOTE="$REMOTE mirror @mirror mirror/titan @data data/titan"
fi

~/src/haskell/pushme/dist/build/pushme/pushme $REMOTE "$@"

if [[ -n "$OTHER" ]]; then
    rsync -av --delete ~/.pushme/ $OTHER:.pushme/
fi

exit 0

### pushme ends here
