#!/usr/bin/env python

import sys
import os
import re

base       = sys.argv[1]
next       = sys.argv[2]
cur_file   = None
cur_hunk   = None
cur_header = None
cur_patch  = []

def process_patch():
    next_file  = None
    next_hunk  = None
    next_patch = []
    found      = False

    fd = open(next)
    for line in fd.readlines():
        match = re.match('^--- .+/(.+)$', line)
        if match:
            if next_patch \
                    and next_file == cur_file \
                    and next_hunk == cur_hunk \
                    and next_patch == cur_patch:
                found = True
                break
            next_file = match.group(1)
            next_hunk = None
            continue

        if next_file != cur_file:
            continue

        match = re.match('^@@.*?@@ (.*)', line)
        if match:
            if next_patch \
                    and next_file == cur_file \
                    and next_hunk == cur_hunk \
                    and next_patch == cur_patch:
                found = True
                break
            next_hunk  = match.group(1)
            next_patch = []
            continue

        if next_hunk != cur_hunk:
            continue

        next_patch.append(line)

    if next_patch \
            and next_file == cur_file \
            and next_hunk == cur_hunk \
            and next_patch == cur_patch:
        found = True

    fd.close()

    if not found:
        print cur_header,
        for line in cur_patch:
            print line,

bf = open(base)

for line in bf.readlines():
    if re.match('^[a-z]', line):
        continue

    match = re.match('^--- .+/(.+)$', line)
    if match:
        if cur_patch: process_patch()
        cur_file = match.group(1)
        sys.stderr.write(cur_file + "\n")
        cur_hunk = None
        print line,
        continue

    if re.match('^\+\+\+', line):
        print line,
        continue

    match = re.match('^@@.*?@@ (.*)', line)
    if match:
        if cur_patch: process_patch()
        cur_hunk   = match.group(1)
        cur_header = line
        cur_patch  = []
        continue

    cur_patch.append(line)

if cur_patch: process_patch()

bf.close()
