#!/bin/bash

usenet=false
if [[ "$1" == "net" ]]; then
    usenet=true
    shift 1
fi

commit

if [[ $usenet == true ]]; then
    publish
    ~/bin/backup/backup net &
    rsync -a --delete hcoop.net:Sites/newartisans/ ~/Sites/newartisans/ &
fi

SNAPSHOTS="/Volumes/My Book/Archive/Snapshots"

if [[ -d /Volumes/My\ Book ]]; then
    # Make a monthly backup if the last monthly snapshot is equal to or older
    # than 27 days, or if no monthly snapshot has yet been made.

    if [[ -d "$SNAPSHOTS/monthly.0" ]]; then
	secs_since_monthly=$(( $(stat -f %m "$SNAPSHOTS/weekly.3") - $(stat -f %m "$SNAPSHOTS/monthly.0") ))
	days_since_monthly=$(( secs_since_monthly / 86400 ))
    fi

    if [[ -z "$days_since_monthly" || $days_since_monthly -ge 27 ]]; then
	sudo rsnapshot -c ~/.rsnapshotrc monthly "$@"
    else
	echo Not time yet for a monthly snapshot \(last was $days_since_monthly days ago\).
    fi

    # Make a weekly backup if the last monthly snapshot is equal to or older
    # than 6 days (since 6.9 days will be seen as 6 days), or if no weekly
    # snapshot has yet been made.

    if [[ -d "$SNAPSHOTS/weekly.0" ]]; then
	secs_since_weekly=$(( $(stat -f %m "$SNAPSHOTS/daily.6") - $(stat -f %m "$SNAPSHOTS/weekly.0") ))
	days_since_weekly=$(( secs_since_weekly / 86400 ))
    fi

    if [[ -z "$days_since_weekly" || $days_since_weekly -ge 6 ]]; then
	sudo rsnapshot -c ~/.rsnapshotrc weekly "$@"
    else
	echo Not time yet for a weekly snapshot \(last was $days_since_weekly days ago\).
    fi

    # Make a daily snapshot every time this script is run, which should be
    # once nightly.

    if [[ -d "$SNAPSHOTS/daily.0" ]]; then
	secs_since_daily=$(( $(date +%s) - $(stat -f %m "$SNAPSHOTS/daily.0") ))
	hours_since_daily=$(( secs_since_daily / 3600 ))
    fi

    if [[ -z "$hours_since_daily" || $hours_since_daily -ge 23 ]]; then
	sudo rsnapshot -c ~/.rsnapshotrc daily "$@"
    else
	echo Not time yet for a daily snapshot \(last was $hours_since_daily hours ago\).
    fi
fi

wait

echo System snapshot is finished.
